trigger:
  - master
pr:
  - none

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: environment
    displayName: Environment to Deploy (sbox default)
    type: string
    default: sandbox
    values:
      - dev
      - sandbox
      - test1
      - test2
      - demo
      - aat
      - preview

variables:
  - group: vh-reporting-infra

stages:

  - stage: CIBuild
    displayName: 'Validate Infra'
    jobs: 
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          terraformPath: $(Build.SourcesDirectory)/infrastructure
  
  - stage: Plan
    displayName: Plan ${{ parameters.environment }}
    jobs:
      - template: pipeline/jobs/terraform-plan.yaml
        parameters:
          subscription: $(subscription)
          environment: ${{ parameters.environment }}
          location: $(location)
          resourceGroup: $(resourceGroup)
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

  - stage: Wait
    jobs:
      - job: Wait
        displayName: "Wait for approval"
        pool: server
        steps:
          - template: pipeline/steps/wait.yaml
            parameters:
              environment: ${{ parameters.environment }}
            
  - stage: Apply
    displayName: Apply ${{ parameters.environment }}
    dependsOn: Wait 
    jobs:
      - template: pipeline/jobs/terraform-apply.yaml
        parameters:
          subscription: $(subscription)
          dependsOn: Wait
          location: $(location)
          environment: ${{ parameters.environment }}
          resourceGroup: $(resourceGroup)
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

  - stage: LogicApp
    displayName: Logic App Config
    dependsOn: Apply
    jobs:
        - job: UpdateLogicApp
          displayName: Update Logic App Workflow
          steps:
            - task: AzureCLI@2
              displayName: Azure CLI
              inputs:
                azureSubscription: Reform-CFT-VH-Dev
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az config set extension.use_dynamic_install=yes_without_prompt
                  az logic workflow create --resource-group vh-reporting-infra-${{ parameters.environment }} --location "uksouth" --name "vh-reporting-${{ parameters.environment }}" --definition "$(System.DefaultWorkingDirectory)/logicApp/appInsightsToStorage.json"

  - stage: ADF
    displayName: ADF Config
    dependsOn: Apply 
    jobs:
        - job: UpdateADF 
          displayName: Create/Update ADF config
          steps:
            - task: CopyFiles@2
              displayName: "Download ADF Pipelines"
              inputs:
                SourceFolder: '$(Pipeline.Workspace)/pipeline'
                Contents: 'Master_Staging.json'
                TargetFolder: '$(build.artifactstagingdirectory)/master'
                CleanTargetFolder: true
                OverWrite: true
                flattenFolders: true

            - task: AzureResourceManagerTemplateDeployment@3
              displayName: Deploy ADDF pipelines
              inputs:
                ConnectedServiceName: Reform-CFT-VH-Dev
                action: 'Create Or Update Resource Group'
                resourceGroupName: 'vh-reporting-infra-${{ parameters.environment }}'
                location: 'UK South'
                templateLocation: 'Linked artifact'
                csmFile: '$(build.artifactstagingdirectory)/master/Master_Staging.json'
                deploymentMode: 'Incremental'

