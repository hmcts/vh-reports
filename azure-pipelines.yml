trigger:
  - master
pr:
  - none

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: environment
    displayName: Environment to Deploy (sbox default)
    type: string
    default: sandbox
    values:
      - dev
      - sandbox
      - test1
      - test2
      - demo
      - aat
      - preview

variables:
  - group: vh-reporting-infra

stages:

  - stage: CIBuild
    displayName: 'Validate Infra'
    jobs: 
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          terraformPath: $(Build.SourcesDirectory)/infrastructure
  
  - stage: Plan
    displayName: Plan ${{ parameters.environment }}
    jobs:
      - template: pipeline/jobs/terraform-plan.yaml
        parameters:
          subscription: $(subscription)
          environment: ${{ parameters.environment }}
          location: $(location)
          resourceGroup: vh-core-infra-${{ parameters.environment }}
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

  - stage: Wait
    jobs:
      - job: Wait
        displayName: "Wait for approval"
        pool: server
        steps:
          - template: pipeline/steps/wait.yaml
            parameters:
              environment: ${{ parameters.environment }}
            
  - stage: Apply
    displayName: Apply ${{ parameters.environment }}
    dependsOn: Wait 
    jobs:
      - template: pipeline/jobs/terraform-apply.yaml
        parameters:
          subscription: "Reform-CFT-VH-Dev"
          dependsOn: Wait
          location: $(location)
          environment: ${{ parameters.environment }}
          resourceGroup: vh-core-infra-${{ parameters.environment }}
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

      
