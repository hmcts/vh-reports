trigger:
  - master
pr:
  - none

resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

parameters:
  - name: environment
    displayName: Environment to Deploy (sbox default)
    type: string
    default: sandbox
    values:
      - dev
      - sandbox
      - test1
      - test2
      - demo
      - aat
      - preview

variables:
  - group: vh-reporting-infra

stages:

  - stage: CIBuild
    displayName: 'Validate Infra'
    jobs: 
      - template: pipeline/jobs/terraform-validate.yaml
        parameters:
          terraformPath: $(Build.SourcesDirectory)/infrastructure
  
  - stage: Plan
    displayName: Plan ${{ parameters.environment }}
    jobs:
      - template: pipeline/jobs/terraform-plan.yaml
        parameters:
          subscription: $(subscription)
          environment: ${{ parameters.environment }}
          location: $(location)
          resourceGroup: $(resourceGroup)
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

  - stage: Wait
    jobs:
      - job: Wait
        displayName: "Wait for approval"
        pool: server
        steps:
          - template: pipeline/steps/wait.yaml
            parameters:
              environment: ${{ parameters.environment }}
            
  - stage: Apply
    displayName: Apply ${{ parameters.environment }}
    dependsOn: Wait 
    jobs:
      - template: pipeline/jobs/terraform-apply.yaml
        parameters:
          subscription: $(subscription)
          dependsOn: Wait
          location: $(location)
          environment: ${{ parameters.environment }}
          resourceGroup: $(resourceGroup)
          storageAccount: $(storageAccount)
          containerName: $(containerName)
          stateKey: $(stateKey)-${{ parameters.environment }}.tfstate
          outputName: ${{ parameters.environment }}
          workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure

  - stage: LogicApp
    displayName: Logic App Config
    dependsOn: Apply
    jobs:
        - job: UpdateLogicApp
          displayName: Update Logic App Workflow
          steps:
            - task: AzureCLI@2
              displayName: Azure CLI
              inputs:
                azureSubscription: Reform-CFT-VH-Dev
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az config set extension.use_dynamic_install=yes_without_prompt
                  az logic workflow create --resource-group vh-reporting-infra-${{ parameters.environment }} --location "uksouth" --name "vh-reporting-${{ parameters.environment }}" --definition "$(System.DefaultWorkingDirectory)/logicApp/appInsightsToStorage.json"

  - stage: ReportingDB
    displayName: Reporting DB Build
    dependsOn: Apply 
    jobs:
       
        - job: CreateReportingDB 
          displayName: Create/Update ReportingDB
          steps:
            - task: SqlAzureDacpacDeployment@1
              inputs:
                azureSubscription: Reform-CFT-VH-Dev
                AuthenticationType: 'connectionString'
                ConnectionString: 'Server=tcp:vh-core-infra-${{ parameters.environment }}.database.windows.net,1433;Initial Catalog=vhreporting;Persist Security Info=False;User ID=$(dbuser);Password=$(dbuserpass);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'
                deployType: 'SqlTask'
                SqlFile: 'database/vh-reports'
                IpDetectionMethod: 'AutoDetect'
                
  - stage: ADF
    displayName: ADF Config
    dependsOn: Apply 
    jobs:
       
        - job: UpdateADFPipelines 
          displayName: Create/Update ADF pipelines
          steps:
            - task: AzureCLI@2
              displayName: Azure CLI
              inputs:
                azureSubscription: Reform-CFT-VH-Dev
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az config set extension.use_dynamic_install=yes_without_prompt
                  az datafactory pipeline create --resource-group vh-reporting-infra-${{ parameters.environment }} --factory-name "vh-datafactory-${{ parameters.environment }}" --name "Master_Staging" --pipeline "$(System.DefaultWorkingDirectory)/pipeline/Master_Staging.json"
            
